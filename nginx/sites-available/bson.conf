server {
    listen 80;
    server_name api.bson.loc;
    return 301 https://$server_name$request_uri;
} 

server {
    listen 443 ssl http2;

    ssl_certificate /etc/nginx/ssl/bson.crt;
    ssl_certificate_key /etc/nginx/ssl/bson.key;

    server_name api.bson.loc;

    index index.php index.html;
    root /workspace/apps/bson/backend/public;

    client_max_body_size 128m;

    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,HEAD,OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;

   
    error_log   /workspace/apps/bson/backend/log/error.log;
    
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,DELETE,HEAD,OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin,Content-Type,Accept,Authorization' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        try_files $uri /index.php?$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}

server {
      listen 80;
      server_name bson.loc;
      return 301 https://$server_name$request_uri;
} 

server {
      listen 443 ssl http2;

      ssl_certificate /etc/nginx/ssl/bson.crt;
      ssl_certificate_key /etc/nginx/ssl/bson.key;

      server_name bson.loc;

      root /workspace/apps/bson/frontend/dist/pwa;
      index index.html;
 

      location / {
        # Proxy_pass configuration
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header Host $http_host;
        # proxy_set_header X-NginX-Proxy true;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_max_temp_file_size 0;
        # proxy_pass http://bson-app;
 
        # try_files $uri $uri /index.html;

        proxy_pass http://bson-app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
 
     }
} 

upstream bson-app {
    # Nodejs app upstream
    server 127.0.0.1:8081;
    keepalive 64;
}